name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly on Sundays at 00:00 UTC
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  secret-scan:
    name: Scan for Secrets
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for comprehensive scanning
      
      - name: Run TruffleHog secret scanner
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified
      
      - name: Check for .env files
        run: |
          echo "Checking for accidentally committed .env files..."
          if git ls-files | grep -E "^\.env$|^\.env\.local$|^\.env\.development$|^\.env\.production$"; then
            echo "❌ Error: .env file(s) found in repository!"
            exit 1
          else
            echo "✅ No .env files found"
          fi
      
      - name: Check for common secret patterns
        run: |
          echo "Checking for common secret patterns..."
          
          # Check for potential API keys
          if git grep -i "api[_-]key.*=.*['\"][a-zA-Z0-9]{20,}['\"]" -- "*.ts" "*.tsx" "*.js" "*.jsx" ":!*.md"; then
            echo "⚠️  Warning: Potential API key pattern found"
            exit 1
          fi
          
          # Check for hardcoded secrets
          if git grep -i "secret.*=.*['\"][a-zA-Z0-9]{32,}['\"]" -- "*.ts" "*.tsx" "*.js" "*.jsx" ":!*.md"; then
            echo "⚠️  Warning: Potential hardcoded secret found"
            exit 1
          fi
          
          # Check for private keys
          if git grep -l "BEGIN.*PRIVATE KEY" -- ":!*.md"; then
            echo "❌ Error: Private key found in repository!"
            exit 1
          fi
          
          echo "✅ No obvious secret patterns found"
      
      - name: Verify .gitignore
        run: |
          echo "Verifying .gitignore contains security patterns..."
          
          if ! grep -q "^\.env\*" .gitignore; then
            echo "⚠️  Warning: .gitignore doesn't exclude .env files"
            exit 1
          fi
          
          if ! grep -q "\.pem$" .gitignore; then
            echo "⚠️  Warning: .gitignore doesn't exclude .pem files"
            exit 1
          fi
          
          echo "✅ .gitignore properly configured"

  dependency-scan:
    name: Scan Dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Run npm audit
        run: pnpm audit --audit-level=high
        continue-on-error: true
      
      - name: Check for outdated security packages
        run: |
          echo "Checking for outdated security-related packages..."
          pnpm outdated
        continue-on-error: true

  report:
    name: Security Report Summary
    runs-on: ubuntu-latest
    needs: [secret-scan, dependency-scan]
    if: always()
    
    steps:
      - name: Summary
        run: |
          echo "## 🔒 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Secret scan completed" >> $GITHUB_STEP_SUMMARY
          echo "✅ Dependency scan completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "For detailed security guidelines, see:" >> $GITHUB_STEP_SUMMARY
          echo "- [Security Scan Report](./SECURITY_SCAN_REPORT.md)" >> $GITHUB_STEP_SUMMARY
          echo "- [Security Checklist](./SECURITY_CHECKLIST.md)" >> $GITHUB_STEP_SUMMARY
